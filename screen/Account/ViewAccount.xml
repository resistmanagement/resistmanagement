<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<screen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/xml-screen-3.xsd"
        default-menu-title="Account" default-menu-index="2" render-modes="qvt">

    <!--
    This screen is to view or edit an account similar to the instagram profile page. Here is where a profile editor can
    edit their profile, upload new posts, and edit their talents (the talent screen should be joined with this one). This
    should also have a back button, similar to the ViewProject screen.

    The menu should also have a page like this that is for the user to edit their own profile instead of the settings page
    being in the menu, and instead include the settings page in the profile account page.
    -->

    <parameter name="partyId" required="true"/>
    <parameter name="canViewAccount"/>

    <transition name="updateProfilePicture"><service-call name="resistmanagement.ResistServices.upload#ProfilePictureAttachment" in-map="[partyId:partyId, contentFile:contentFile]"/>
        <default-response url="."/></transition>
    <transition name="updateAccount"><service-call name="resistmanagement.ResistServices.update#Account"/>
        <default-response url="."/></transition>
    <transition name="uploadPost"><service-call name="resistmanagement.ResistServices.upload#PostAttachment" in-map="[partyId:partyId, contentFile:contentFile]"/>
        <default-response url="."/></transition>

    <actions>
        <entity-find-one entity-name="mantle.party.Party" value-field="party">
            <field-map field-name="partyId"/></entity-find-one>

        <service-call name="resistmanagement.ResistServices.check#AccountView" in-map="[partyId:partyId]" out-map="accountView"/>

        <set field="partyContentList" from="[]"/>
        <set field="profileContentList" from="[]"/>
        <set field="partyContentBioList" from="[]"/>
        <set field="postContentList" from="[]"/>
        <if condition="accountView?.allowed">
            <!-- Profile Picture and Posts Party Content -->
            <entity-find entity-name="mantle.party.PartyContent" list="partyContentList">
                <econdition field-name="partyId"/>
                <econditions combine="or">
                    <econditions combine="and">
                        <econdition field-name="contentLocation" operator="is-not-null"/>
                        <econdition field-name="partyContentTypeEnumId" operator="in" from="['PcntPrimaryImage']"/>
                    </econditions>
                    <econditions combine="and">
                        <econdition field-name="contentLocation" operator="is-null"/>
                        <econdition field-name="partyContentTypeEnumId" operator="in" from="['PcntBio']"/>
                    </econditions>
                </econditions>
                <order-by field-name="-contentDate"/></entity-find>
            <filter-map-list list="partyContentList" to-list="profileContentList"><field-map field-name="partyContentTypeEnumId" value="PcntPrimaryImage"/></filter-map-list>
            <filter-map-list list="partyContentList" to-list="partyContentBioList"><field-map field-name="partyContentTypeEnumId" value="PcntBio"/></filter-map-list>

            <!-- Profile Posts Communication Event Content Medium and Small -->
            <entity-find entity-name="mantle.party.communication.CommunicationEventAndContent" list="postAllContentList">
                <econdition field-name="fromPartyId" from="partyId"/>
                <econdition field-name="communicationEventTypeId" value="Post"/>
                <econdition field-name="contentLocation" operator="is-not-null"/>
                <econdition field-name="contentTypeEnumId" operator="in" value="CmctImageMedium,CmctImageSmall"/>
                <select-field field-name="communicationEventId,communicationEventContentId,contentLocation,contentTypeEnumId"/>
                <order-by field-name="sequenceId,-contentDate,-entryDate"/>
            </entity-find>
            <filter-map-list list="postAllContentList" to-list="postContentList"><field-map field-name="contentTypeEnumId" value="CmctImageSmall"/></filter-map-list>
            <filter-map-list list="postAllContentList" to-list="postDetailedContentList"><field-map field-name="contentTypeEnumId" value="CmctImageMedium"/></filter-map-list>
        <else>
            <!-- Only find posts if they're allowed to view the account. By default everyone is allowed to see everyone elses profile picture and bio -->
            <entity-find entity-name="mantle.party.PartyContent" list="partyContentList">
                <econdition field-name="partyId"/>
                <econditions combine="or">
                    <econditions combine="and">
                        <econdition field-name="contentLocation" operator="is-not-null"/>
                        <econdition field-name="partyContentTypeEnumId" operator="in" from="['PcntPrimaryImage']"/>
                    </econditions>
                    <econditions combine="and">
                        <econdition field-name="contentLocation" operator="is-null"/>
                        <econdition field-name="partyContentTypeEnumId" operator="in" from="['PcntBio']"/>
                    </econditions>
                </econditions>
                <order-by field-name="-contentDate"/></entity-find>
            <filter-map-list list="partyContentList" to-list="profileContentList"><field-map field-name="partyContentTypeEnumId" value="PcntPrimaryImage"/></filter-map-list>
            <filter-map-list list="partyContentList" to-list="partyContentBioList"><field-map field-name="partyContentTypeEnumId" value="PcntBio"/></filter-map-list>
        </else></if>
        <set field="partyProfilePictureList" from="[[partyContentId:profileContentList?.first()?.partyContentId, partyText:party?.pseudoId ?: (party?.person?.firstName + ' ' + party?.person?.lastName) ?: party?.organization?.organizationName]]"/>
        <set field="bio" value=""/><if condition="partyContentBioList?.size() &gt; 0"><set field="bio" from="partyContentBioList?.first()?.description"/></if>

        <set field="postTitleList" from="[]"/><set field="postList" from="[]"/><set field="intermediatePostList" from="[]"/>
        <if condition="postContentList?.size() &gt; 0">
            <set field="postTitleList" from="[[communicationEventContentId:postContentList?.first()?.communicationEventContentId]]"/>

            <!-- Build the post list in 3s for showing them in a grid of 3s. Not the best way to do it, and could do it better through more flexible form list grids. -->
            <iterate list="postContentList" entry="communicationEventAndContent">
                <script>intermediatePostList.add(sri.buildUrl('/custom/downloadCommEventContent').addParameter('communicationEventContentId', communicationEventAndContent.communicationEventContentId).getUrlWithParams())</script>
                <if condition="communicationEventAndContent_index % 3 == 2 || communicationEventAndContent_index == postContentList.size() - 1">
                    <script>postList.add(intermediatePostList)</script>
                    <set field="intermediatePostList" from="[]"/>
                </if>
            </iterate>
        </if>

        <service-call name="resistmanagement.ResistServices.check#AccountEdit" in-map="[partyId:partyId]" out-map="accountEdit"/>

        <entity-find-one entity-name="mantle.party.PartySettingType" value-field="partySettingType" auto-field-map="[partySettingTypeId:'PartyVisibility']"/>
        <entity-find-one entity-name="mantle.party.PartySetting" value-field="partyVisibilitySetting" auto-field-map="[partyId:partyId,partySettingTypeId:partySettingType.partySettingTypeId]"/>

        <service-call name="org.moqui.impl.ImageServices.get#ImageReaderMIMETypes" out-map="context"/>
    </actions>
    <widgets>
        <form-list name="PartyProfilePictureSection" list="partyProfilePictureList" skip-form="true" skip-header="true" paginate="false" saved-finds="false" header-dialog="false">
            <row-actions><set field="contentUrl" from="sri.buildUrl('/custom/downloadPartyContent').addParameter('partyContentId', partyContentId).getUrlWithParams()"/></row-actions>
            <field name="content"><conditional-field condition="accountEdit?.allowed"><container-dialog id="UpdateProfilePicture" button-text="Update Picture">
                    <!-- This is a bit of a hack so that the dialog button is openable through an image press. -->
                    <text><![CDATA[<template v-slot:button><img src="${contentUrl}" width="100px"/></template>]]></text>
                    <form-single name="UpdateProfilePictureForm" transition="updateProfilePicture" pass-through-parameters="true">
                        <field name="partyId"><default-field><hidden/></default-field></field>
                        <field name="contentFile"><default-field><file/></default-field></field>
                        <field name="submit"><default-field><submit/></default-field></field>
                    </form-single></container-dialog></conditional-field>
                <default-field><image url="${contentUrl}" url-type="plain" width="100px"/></default-field></field>
            <!-- Post button dialog should have something like: https://v1.quasar.dev/vue-components/uploader -->
            <field name="uploadPostButton"><conditional-field condition="accountEdit?.allowed">
                <container-dialog id="UploadPost" button-text="Add Post">
                    <form-single name="UploadPostForm" transition="uploadPost" pass-through-parameters="true">
                        <field name="partyId"><default-field><hidden/></default-field></field>
                        <field name="contentFile"><default-field><file accept="${String.join(', ', imageReaderMIMETypes)}"/></default-field></field>
                        <field name="submit"><default-field><submit/></default-field></field>
                    </form-single>
                </container-dialog>
            </conditional-field></field>
            <field name="messageAccount"><conditional-field condition="!accountEdit?.allowed">
                <link url="../../Message/FindMessage" text="Message" parameter-map="[toPartyId:partyId]"/>
            </conditional-field></field>
        </form-list>
        <form-single name="PartyProfileEditSection" transition="updateAccount" map="party" pass-through-parameters="true">
            <field name="partyId"><default-field><hidden/></default-field></field>
            <field name="pseudoId"><conditional-field condition="accountEdit?.allowed" title="Id"><text-line/></conditional-field>
                <default-field title="Id"><label text="${pseudoId}"/></default-field></field>
            <field name="settingValue" from="partyVisibilitySetting?.settingValue ?: partySettingType?.defaultValue"><conditional-field condition="accountEdit?.allowed" title="Account Visibility">
                <drop-down><list-options list="partySettingType?.type?.enums" key="${enumId}" text="${description}"/></drop-down>
            </conditional-field></field>
            <field name="bio"><conditional-field condition="accountEdit?.allowed"><text-area/></conditional-field>
                <default-field><label text="${bio ?: ''}"/></default-field></field>
            <field name="submit"><conditional-field condition="accountEdit?.allowed"><submit text="Submit"/></conditional-field></field>
            <field-layout>
                <field-row><field-ref name="pseudoId"/><field-ref name="settingValue"/></field-row>
                <fields-not-referenced/>
            </field-layout>
        </form-single>

        <!-- Posts -->
        <section-iterate name="PostsSection" list="postList" entry="intermediatePostList">
            <actions>
                <set field="postUrl0" from="intermediatePostList?.size > 0 ? intermediatePostList?.get(0) : null"/>
                <set field="postUrl1" from="intermediatePostList?.size > 1 ? intermediatePostList?.get(1) : null"/>
                <set field="postUrl2" from="intermediatePostList?.size > 2 ? intermediatePostList?.get(2) : null"/>
            </actions>
            <widgets>
                <form-list name="PostFormList" list="postTitleList" skip-form="true" skip-header="true">
                    <field name="content0"><conditional-field condition="postUrl0"><container-dialog id="ImagePost0" button-text="">
                        <text><![CDATA[<template v-slot:button><img src="${postUrl0}" width="80px"/></template>]]></text>
                        <image url="${postUrl0}" url-type="plain"/></container-dialog></conditional-field></field>
                    <field name="content1"><conditional-field condition="postUrl1"><container-dialog id="ImagePost1" button-text="">
                        <text><![CDATA[<template v-slot:button><img src="${postUrl1}" width="80px"/></template>]]></text>
                        <image url="${postUrl1}" url-type="plain"/></container-dialog></conditional-field></field>
                    <field name="content2"><conditional-field condition="postUrl2"><container-dialog id="ImagePost2" button-text="">
                        <text><![CDATA[<template v-slot:button><img src="${postUrl2}" width="80px"/></template>]]></text>
                        <image url="${postUrl2}" url-type="plain"/></container-dialog></conditional-field></field>
                </form-list>
            </widgets>
        </section-iterate>
    </widgets>
</screen>
