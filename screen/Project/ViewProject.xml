<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<screen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/xml-screen-3.xsd"
        default-menu-title="Project" default-menu-index="6" default-menu-include="true">

    <!--
    The idea with this screen is to show a project and its details including the positions (which are currently on the
    FindProjectPositions.xml page), and allow the user to edit the project if they have permission. It would look like
    something approximating the instagram profile page, but has the additional information needed to view and manage the
    project. This would additionally probably need a back button similar to FindMessages.xml to go back to the project
    list view.

    This page may be worth client rendering with quasar to handle space more efficiently and properly show the images in
    a grid instead of the hacky way I did it here. Try out using cards with media inside of them: https://v1.quasar.dev/vue-components/card#media-content.
    -->

    <parameter name="workEffortId" required="true"/>
    <parameter name="canViewProjectPositions"/>

    <always-actions><service-call name="resistmanagement.ResistServices.check#ProjectView" in-map="[workEffortId:workEffortId]" out-map="projectView"/>
        <if condition="!projectView?.allowed"><return message="Not allowed to view project" error="true" type="danger"/></if></always-actions>

    <transition name="updateProject"><service-call name="resistmanagement.ResistServices.update#Project"
            in-map="[workEffortId:workEffortId, workEffortName:workEffortName, visibilityEnumId:visibilityEnumId, statusId:statusId, estimatedStartDate:estimatedStartDate, estimatedWorkDuration:estimatedWorkDuration, description:description]"/>
        <default-response url="."/></transition>
    <transition name="updateStatus"><service-call name="resistmanagement.ResistServices.update#Project" in-map="[workEffortId:workEffortId, statusId:statusId]"/><default-response url="."/></transition>
    <transition name="uploadProjectPost"><service-call name="resistmanagement.ResistServices.upload#ProjectPostAttachment" in-map="[workEffortId:workEffortId,contentFile:contentFile]"/>
        <default-response url="."/></transition>

    <actions>
        <entity-find-one entity-name="mantle.work.effort.WorkEffort" value-field="project" auto-field-map="[workEffortId:workEffortId]"/>

        <service-call name="resistmanagement.ResistServices.check#ProjectEdit" in-map="[workEffortId:workEffortId]" out-map="projectEdit"/>

        <service-call name="org.moqui.impl.ImageServices.get#ImageReaderMIMETypes" out-map="context"/>

        <!-- TODO: Simplify this to not use a view entity -->
        <entity-find entity-name="mantle.work.effort.WorkEffortDetailPartyWithRoleAndFromToRelationshipWithEmplPositionApplicationWithCommunicationEventContent" list="postAllContentList">
            <econdition field-name="effortEventWorkEffortId" from="workEffortId"/>
            <econdition field-name="eventCommunicationEventTypeId" value="Post"/>
            <econdition field-name="eventContentContentLocation" operator="is-not-null"/>
            <econdition field-name="eventContentContentTypeEnumId" operator="in" value="CmctImageMedium,CmctImageSmall"/>
            <select-field field-name="eventCommunicationEventId,eventContentCommunicationEventContentId,eventContentContentLocation,eventContentContentTypeEnumId"/>
            <order-by field-name="eventContentSequenceId,-eventContentContentDate,-eventContentEntryDate"/>
        </entity-find>
        <filter-map-list list="postAllContentList" to-list="postContentList"><field-map field-name="eventContentContentTypeEnumId" value="CmctImageSmall"/></filter-map-list>
        <filter-map-list list="postAllContentList" to-list="postDetailedContentList"><field-map field-name="eventContentContentTypeEnumId" value="CmctImageMedium"/></filter-map-list>

        <set field="postTitleList" from="[]"/><set field="postList" from="[]"/><set field="intermediatePostList" from="[]"/>
        <if condition="postContentList?.size() &gt; 0">
            <set field="postTitleList" from="[[communicationEventContentId:postContentList?.first()?.eventContentCommunicationEventContentId]]"/>

            <iterate list="postContentList" entry="communicationEventAndContent">
                <script>intermediatePostList.add(sri.buildUrl('/custom/downloadProjectCommEventContent').addParameter('communicationEventContentId', communicationEventAndContent.eventContentCommunicationEventContentId).getUrlWithParams())</script>
                <if condition="communicationEventAndContent_index % 3 == 2 || communicationEventAndContent_index == postContentList.size() - 1">
                    <script>postList.add(intermediatePostList)</script>
                    <set field="intermediatePostList" from="[]"/>
                </if>
            </iterate>
        </if>

        <entity-find-one entity-name="moqui.basic.StatusItem" value-field="statusItem" auto-field-map="[statusId:project.statusId]"/>
        <entity-find entity-name="moqui.basic.StatusFlowTransitionToDetail" list="statusTransitionList">
            <econdition field-name="statusId" from="project.statusId"/>
            <econdition field-name="statusFlowId" from="project.statusFlowId ?: 'Default'"/>
            <order-by field-name="transitionSequence,transitionName"/>
        </entity-find>
        <if condition="!projectEdit.allowed"><set field="statusTransitionList" from="[]"/></if>
    </actions>

    <widgets>
        <form-single name="UpdateProjectForm" map="project" transition="updateProject" pass-through-parameters="true">
            <!-- TODO: allow for partyId selection like FindProject when user can have multiple accounts -->
            <field name="workEffortName"><conditional-field condition="projectEdit?.allowed" title="Project Name"><text-line/></conditional-field>
                <default-field><label text="${workEffortName}" type="h2"/></default-field></field>
            <!-- This field was taken and modified from SimpleScreens/template/StatusWidgets.xml -->
            <field name="status"><default-field>
                <container style="shaded-area condensed" type="span">
                    <container style="float-plain condensed" type="ul">
                        <container type="li">
                            <container><label text="Status" type="strong"/></container>
                            <container><label text="${statusItem?.description ?: ''}" type="strong" style="text-info"/></container>
                        </container>
                        <section-iterate name="StatusChangeLinkSection" list="statusTransitionList" entry="statusTransition"><condition>
                            <expression>statusTransition.userPermissionId == null || statusTransition.userPermissionId.isEmpty() || ec.user.hasPermission(statusTransition.userPermissionId)</expression>
                        </condition><widgets>
                            <container type="li">
                                <link url="${statusChangeTransition ?: 'updateStatus'}" text="${transitionName}"
                                      text-map="statusTransition" parameter-map="[statusId:statusTransition.toStatusId]"/>
                            </container>
                        </widgets></section-iterate>
                    </container>
                </container>
            </default-field></field>
            <field name="visibilityEnumId"><conditional-field condition="projectEdit?.allowed" title="Visibility"><drop-down>
                <entity-options key="${enumId}" text="${description}">
                    <entity-find entity-name="moqui.basic.Enumeration" cache="true">
                        <econdition field-name="enumId" operator="in" from="['WevRestricted','WevAllUsers']"/>
                        <econdition field-name="enumTypeId" value="WorkEffortVisibility"/>
                    </entity-find></entity-options>
            </drop-down></conditional-field></field>
            <field name="estimatedStartDate"><conditional-field condition="projectEdit?.allowed" title="Start Date"><date-time/></conditional-field>
                <default-field><label text="Start Date: ${ec.l10n.format(estimatedStartDate, 'MMM dd, yyyy hh:mm a')}" type="h6"/></default-field></field>
            <field name="estimatedWorkDuration"><conditional-field condition="projectEdit?.allowed" title="Estimated Hours"><text-line size="8"/></conditional-field>
                <default-field><label text="Estimated Hours: ${estimatedWorkDuration}" type="h6"/></default-field></field>
            <field name="description"><conditional-field condition="projectEdit?.allowed" title="Description"><text-area rows="10" cols="60"/></conditional-field>
                <default-field><label text="${description ?: ''}"/></default-field></field>
            <field name="submitButton"><conditional-field condition="projectEdit?.allowed" title="Update"><submit/></conditional-field></field>
            <field-layout>
                <field-row><field-ref name="workEffortName"/><field-ref name="status"/></field-row>
                <field-row-big><field-ref name="estimatedStartDate"/><field-ref name="estimatedWorkDuration"/><field-ref name="visibilityEnumId"/></field-row-big>
                <fields-not-referenced/>
            </field-layout>
        </form-single>

        <form-single name="CreateProjectPostForm">
            <field name="title"><default-field><label text="Posts" type="h2"/></default-field></field>
            <field name="uploadProjectPostButton"><conditional-field condition="projectEdit?.allowed">
                <!-- Post button dialog should have something like: https://v1.quasar.dev/vue-components/uploader -->
                <container-dialog id="UploadProjectPostContainer" button-text="Add Post">
                    <form-single name="UploadProjectPostForm" transition="uploadProjectPost" pass-through-parameters="true">
                        <field name="workEffortId"><default-field><hidden/></default-field></field>
                        <field name="contentFile"><default-field><file accept="${String.join(', ', imageReaderMIMETypes)}"/></default-field></field>
                        <field name="submit"><default-field><submit/></default-field></field>
                    </form-single>
                </container-dialog>
            </conditional-field></field>
            <field-layout>
                <field-row><field-ref name="title"/><field-ref name="uploadProjectPostButton"/></field-row>
            </field-layout>
        </form-single>

        <!-- Post Grid -->
        <section-iterate name="PostsSection" list="postList" entry="intermediatePostList">
            <actions>
                <set field="postUrl0" from="intermediatePostList?.size > 0 ? intermediatePostList?.get(0) : null"/>
                <set field="postUrl1" from="intermediatePostList?.size > 1 ? intermediatePostList?.get(1) : null"/>
                <set field="postUrl2" from="intermediatePostList?.size > 2 ? intermediatePostList?.get(2) : null"/>
            </actions>
            <widgets>
                <form-list name="PostFormList" list="postTitleList" skip-form="true" skip-header="true">
                    <field name="content0"><conditional-field condition="postUrl0"><container-dialog id="ImagePost0" button-text="">
                        <text><![CDATA[<template v-slot:button><img src="${postUrl0}" width="80px"/></template>]]></text>
                        <image url="${postUrl0}" url-type="plain"/></container-dialog></conditional-field></field>
                    <field name="content1"><conditional-field condition="postUrl1"><container-dialog id="ImagePost1" button-text="">
                        <text><![CDATA[<template v-slot:button><img src="${postUrl1}" width="80px"/></template>]]></text>
                        <image url="${postUrl1}" url-type="plain"/></container-dialog></conditional-field></field>
                    <field name="content2"><conditional-field condition="postUrl2"><container-dialog id="ImagePost2" button-text="">
                        <text><![CDATA[<template v-slot:button><img src="${postUrl2}" width="80px"/></template>]]></text>
                        <image url="${postUrl2}" url-type="plain"/></container-dialog></conditional-field></field>
                </form-list>
            </widgets>
        </section-iterate>
    </widgets>
</screen>
