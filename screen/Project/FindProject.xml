<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<screen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/xml-screen-3.xsd"
        default-menu-title="Projects" default-menu-index="5" default-menu-include="false" menu-image="/ssstatic/images/project-business120.png">

    <!--
    This screen is intended to list recommended projects that the user can easily apply for, or tap to see more details
    about the project such as who has applied and additional content. This would be client rendered using quasar similar
    to the FindMessages screen making a good initial impression of the app. This would include an infinite scroll element
    as well as using cards, and being space efficient with the information shown. The idea is to initially approximating the
    home page of instagram, but just showing projects initially. The New Project button would be the main action button
    in the menu of the application to make it easy to do so.

    After that, additionally showing other recommended actions like following content from a profile or project, or showing
    suggested profiles. This would probably best be done with a recommendation AI with various weights like location, artistic
    style, money, or whatever else is relevant to the user.
    -->

    <transition name="createProject"><actions>
        <service-call name="resistmanagement.ResistServices.create#Project" in-map="[partyId:partyId, workEffortName:workEffortName, visibilityEnumId:visibilityEnumId, estimatedStartDate:estimatedStartDate, estimatedWorkDuration:estimatedWorkDuration, description:description]" out-map="context"/>
        <service-call name="resistmanagement.ResistServices.check#ProjectPositionView" in-map="[workEffortId:workEffortId]" out-map="projectPositionView"/>
    </actions>
        <default-response url="../ViewProject" parameter-map="[workEffortId:workEffortId,canViewProjectPositions:projectPositionView?.allowed]"/></transition>
    <transition-include name="createPersonAccount" location="component://resistmanagement/screen/Account/FindAccount.xml"/>

    <actions>
        <!-- Find the Resist Projects that are visible to the logged in user -->
        <entity-find entity-name="mantle.work.effort.WorkEffortDetailPartyWithRoleAndFromToRelationshipWithEmplPositionApplicationWithCommunicationEventContent" list="projectList">
            <econdition field-name="effortWorkEffortTypeEnumId" value="WetProject"/>
            <econdition field-name="effortPurposeEnumId" value="WepPrResistProject"/>

            <!-- Conditions for visibility check -->
            <econdition field-name="effortPartyRoleTypeId" value="Manager"/>
            <econdition field-name="relationshipToRoleTypeId" value="ClientManager"/>
            <econdition field-name="relationshipRelationshipTypeEnumId" value="PrtManager"/>
            <econdition field-name="toRoleRoleTypeId" value="ClientManager"/>
            <econditions combine="or">
                <econdition field-name="effortVisibilityEnumId" value="WevAllUsers"/>
                <econdition field-name="relationshipFromPartyId" from="ec.user.userAccount?.partyId"/></econditions>
            <date-filter from-field-name="effortPartyFromDate" thru-field-name="effortPartyThruDate"/>
            <date-filter from-field-name="relationshipFromDate" thru-field-name="relationshipThruDate"/>

            <select-field field-name="effortPartyWorkEffortId,effortDescription,effortWorkEffortName,partyPseudoId,effortOwnerPartyId"/>
            <order-by field-name="-effortLastUpdatedStamp"/>
        </entity-find>

        <!-- Find the profiles that the logged in user manages -->
        <entity-find entity-name="mantle.party.PartyToAndRelationship" list="profileRelationshipList">
            <econdition field-name="fromPartyId" from="ec.user.userAccount.partyId"/>
            <econdition field-name="relationshipTypeEnumId" value="PrtManager"/>
            <econdition field-name="toRoleTypeId" value="ClientManager"/>
            <date-filter/>
            <select-field field-name="toPartyId,pseudoId"/>
        </entity-find>

        <service-call name="resistmanagement.ResistServices.count#PartyAccountOwned" out-map="context"/>
        <entity-find-one entity-name="mantle.party.PartySettingType" value-field="partySettingType" auto-field-map="[partySettingTypeId:'PartyVisibility']"/>

        <set field="projectTitleList" from="[[thisIsRequiredBecause:'a form list needs one entry']]"/>
    </actions>
    <widgets>
        <container-row><row-col lg="12">
            <form-list name="SetProject" list="projectTitleList" skip-header="true" skip-form="true">
<!--                <field name="title"><default-field><label text="Projects" type="h2"/></default-field></field>-->
                <!-- If the user is a manager of at least one profile, show the New Project button -->
                <field name="createProject"><conditional-field condition="profileRelationshipList">
                    <container-dialog id="NewProjectContainer" button-text="New Project">
                        <form-single name="NewProjectForm" transition="createProject" pass-through-parameters="true">
                            <!-- If there is multiple profiles, show a drop-down to select the profile -->
                            <field name="partyId" from="profileRelationshipList?.first()?.toPartyId"><conditional-field condition="profileRelationshipList?.size() &gt; 1" title="Account">
                                    <drop-down required-manual-select="true"><list-options list="profileRelationshipList" key="${toPartyId}" text="${pseudoId}"/></drop-down></conditional-field>
                                <default-field title="Account"><hidden/></default-field></field>
                            <field name="workEffortName"><default-field title="Project Name"><text-line/></default-field></field>
                            <field name="visibilityEnumId"><default-field title="Visibility"><drop-down>
                                <entity-options key="${enumId}" text="${description}">
                                    <entity-find entity-name="moqui.basic.Enumeration" cache="true">
                                        <econdition field-name="enumId" operator="in" from="['WevRestricted','WevAllUsers']"/>
                                        <econdition field-name="enumTypeId" value="WorkEffortVisibility"/>
                                    </entity-find></entity-options>
                            </drop-down></default-field></field>
                            <field name="estimatedStartDate" from="ec.user.nowTimestamp"><default-field title="Start Date"><date-time/></default-field></field>
                            <field name="estimatedWorkDuration" from="'1'"><default-field title="Estimated Hours"><text-line size="8"/></default-field></field>
                            <field name="description"><default-field title="Description"><text-area rows="10" cols="60"/></default-field></field>
                            <field name="submitButton"><default-field title="Create"><submit/></default-field></field>
                            <field-layout>
                                <field-row><field-ref name="partyId"/></field-row>
                                <field-row><field-ref name="workEffortName"/><field-ref name="visibilityEnumId"/></field-row>
                                <field-row><field-ref name="estimatedStartDate"/><field-ref name="estimatedWorkDuration"/></field-row>
                                <fields-not-referenced/>
                            </field-layout>
                        </form-single>
                    </container-dialog></conditional-field>
                    <!-- If the user is not a manager of any profiles, allow them to easily create an account -->
                    <conditional-field condition="profileRelationshipList?.size() == 0"><container-dialog id="SetPersonalTalentAccountDialog" button-text="Create Account">
                        <form-single name="SetPersonalTalentAccountForm" transition="createPersonAccount">
                            <field name="partySettingTypeId"><default-field><hidden default-value="PartyVisibility"/></default-field></field>
                            <field name="pseudoId"><default-field title="Account Username"><text-line/></default-field></field>
                            <field name="settingValue" from="partySettingType?.defaultValue"><default-field title="Account Visibility">
                                <drop-down><list-options list="partySettingType?.type?.enums" key="${enumId}" text="${description}"/></drop-down>
                            </default-field></field>
                            <field name="submitButton"><default-field title="Set"><submit/></default-field></field>
                            <field-layout>
                                <field-row><field-ref name="pseudoId"/><field-ref name="settingValue"/></field-row>
                                <field-ref name="submitButton"/>
                            </field-layout>
                        </form-single>
                    </container-dialog></conditional-field>
                </field>
            </form-list>

            <form-list name="ListProjects" list="projectList" skip-form="true">
                <row-actions><service-call name="resistmanagement.ResistServices.check#ProjectPositionView" in-map="[workEffortId:effortPartyWorkEffortId]" out-map="projectPositionView"/></row-actions>
                <field name="partyPseudoId"><default-field title="Profile"><link url="../../Account/ViewAccount" text="${partyPseudoId}" link-type="anchor" parameter-map="[partyId:effortOwnerPartyId, canViewAccount:accountView?.allowed]"/></default-field></field>
                <field name="effortWorkEffortName"><default-field title="Name"><link url="../ViewProject" text="${effortWorkEffortName}" parameter-map="[workEffortId:effortPartyWorkEffortId,canViewProjectPositions:projectPositionView?.allowed]"/></default-field></field>
                <field name="effortDescription"><default-field title="Description"><label text="${effortDescription ?: ''}"/></default-field></field>

                <!-- These are only shown on mobile devices, by default this doesn't apply to desktop -->
                <columns type="mobile">
                    <column>
                        <field-ref name="partyPseudoId"/>
                        <field-ref name="effortWorkEffortName"/>
                        <field-ref name="effortDescription"/>
                    </column>
                </columns>
            </form-list>
        </row-col></container-row>
    </widgets>
</screen>
